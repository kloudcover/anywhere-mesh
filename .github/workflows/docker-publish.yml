name: Docker (multi-arch) build and publish

on:
  push:
    branches: [main]
    tags: ["v*", "release-*"]
  pull_request:

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      # Setup Rust toolchain before caching
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      # Cache Rust dependencies and build artifacts
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          # Cache all workspace crates for better CI performance
          cache-all-crates: "true"
          # Save cache even on test failures for faster subsequent runs
          cache-on-failure: "true"

      - uses: go-task/setup-task@v1
      - run: task test
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup quemu
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          cache-to: type=gha,mode=max
          cache-from: type=gha
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.ref_name }}
          platforms: linux/amd64,linux/arm64
